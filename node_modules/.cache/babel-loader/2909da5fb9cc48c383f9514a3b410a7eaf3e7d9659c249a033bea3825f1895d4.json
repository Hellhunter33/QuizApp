{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Quiz App\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ArrowLeft, Clock, CheckCircle, XCircle } from 'lucide-react';\nimport Question from './Question';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  category,\n  onFinishQuiz,\n  onBackToStart\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [timeSpent, setTimeSpent] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(30);\n  const [isQuestionTimerActive, setIsQuestionTimerActive] = useState(true);\n  const currentQuestion = questions[currentQuestionIndex];\n  const progress = (currentQuestionIndex + 1) / questions.length * 100;\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeSpent(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleAnswerSelect = answerIndex => {\n    if (isAnswered) return;\n    setSelectedAnswer(answerIndex);\n    setIsAnswered(true);\n    setShowFeedback(true);\n    const isCorrect = answerIndex === currentQuestion.correctAnswer;\n    const newAnswer = {\n      questionIndex: currentQuestionIndex,\n      selectedAnswer: answerIndex,\n      correctAnswer: currentQuestion.correctAnswer,\n      isCorrect,\n      timeSpent: timeSpent\n    };\n\n    // Update userAnswers and handle the last question properly\n    setUserAnswers(prev => {\n      const updatedAnswers = [...prev, newAnswer];\n\n      // If this is the last question, finish the quiz after state update\n      if (currentQuestionIndex === questions.length - 1) {\n        setTimeout(() => {\n          finishQuizWithAnswers(updatedAnswers);\n        }, 2000);\n      }\n      return updatedAnswers;\n    });\n\n    // Auto-advance after showing feedback (only for non-last questions)\n    if (currentQuestionIndex < questions.length - 1) {\n      setTimeout(() => {\n        nextQuestion();\n      }, 2000);\n    }\n  };\n  const nextQuestion = () => {\n    setShowFeedback(false);\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      // Don't reset state before finishing quiz\n      finishQuiz();\n    }\n  };\n  const finishQuiz = () => {\n    // Ensure all questions have answers (fill in any missing ones)\n    const completeAnswers = questions.map((question, index) => {\n      const existingAnswer = userAnswers.find(answer => answer.questionIndex === index);\n      if (existingAnswer) {\n        return existingAnswer;\n      } else {\n        // Create a default answer for any missing questions\n        return {\n          questionIndex: index,\n          selectedAnswer: null,\n          correctAnswer: question.correctAnswer,\n          isCorrect: false,\n          timeSpent: timeSpent\n        };\n      }\n    });\n    const score = completeAnswers.filter(answer => answer.isCorrect).length;\n    onFinishQuiz(completeAnswers, score, timeSpent);\n  };\n  const finishQuizWithAnswers = answers => {\n    console.log('Finishing quiz with answers:', answers);\n\n    // Ensure all questions have answers (fill in any missing ones)\n    const completeAnswers = questions.map((question, index) => {\n      const existingAnswer = answers.find(answer => answer.questionIndex === index);\n      if (existingAnswer) {\n        console.log(`Question ${index}: Found answer`, existingAnswer);\n        return existingAnswer;\n      } else {\n        console.log(`Question ${index}: No answer found, creating default`);\n        // Create a default answer for any missing questions\n        return {\n          questionIndex: index,\n          selectedAnswer: null,\n          correctAnswer: question.correctAnswer,\n          isCorrect: false,\n          timeSpent: timeSpent\n        };\n      }\n    });\n    console.log('Complete answers:', completeAnswers);\n    const score = completeAnswers.filter(answer => answer.isCorrect).length;\n    onFinishQuiz(completeAnswers, score, timeSpent);\n  };\n  const skipQuestion = () => {\n    const newAnswer = {\n      questionIndex: currentQuestionIndex,\n      selectedAnswer: null,\n      correctAnswer: currentQuestion.correctAnswer,\n      isCorrect: false,\n      timeSpent: timeSpent\n    };\n    setUserAnswers(prev => {\n      const updatedAnswers = [...prev, newAnswer];\n\n      // If this is the last question, finish the quiz after state update\n      if (currentQuestionIndex === questions.length - 1) {\n        setTimeout(() => {\n          finishQuizWithAnswers(updatedAnswers);\n        }, 100);\n      }\n      return updatedAnswers;\n    });\n    if (currentQuestionIndex < questions.length - 1) {\n      nextQuestion();\n    }\n  };\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"quiz-container\",\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBackToStart,\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"back-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \"Back to Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"category-title\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-counter\",\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Timer, {\n            timeSpent: timeSpent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: -50\n        },\n        transition: {\n          duration: 0.3\n        },\n        className: \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          question: currentQuestion,\n          onAnswerSelect: handleAnswerSelect,\n          selectedAnswer: selectedAnswer,\n          showFeedback: showFeedback,\n          isAnswered: isAnswered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, currentQuestionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"feedback\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.2\n      },\n      children: selectedAnswer === currentQuestion.correctAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-correct\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"feedback-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Correct! Well done!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-incorrect\",\n        children: [/*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"feedback-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Incorrect. The correct answer is: \", currentQuestion.options[currentQuestion.correctAnswer]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-controls\",\n      children: !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"skip-button\",\n        onClick: skipQuestion,\n        children: \"Skip Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"1Qmltt+CmI9Sr0mfAttvlay4t2E=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","ArrowLeft","Clock","CheckCircle","XCircle","Question","ProgressBar","Timer","jsxDEV","_jsxDEV","Quiz","questions","category","onFinishQuiz","onBackToStart","_s","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","timeSpent","setTimeSpent","showFeedback","setShowFeedback","selectedAnswer","setSelectedAnswer","isAnswered","setIsAnswered","questionTimeLeft","setQuestionTimeLeft","isQuestionTimerActive","setIsQuestionTimerActive","currentQuestion","progress","length","timer","setInterval","prev","clearInterval","handleAnswerSelect","answerIndex","isCorrect","correctAnswer","newAnswer","questionIndex","updatedAnswers","setTimeout","finishQuizWithAnswers","nextQuestion","finishQuiz","completeAnswers","map","question","index","existingAnswer","find","answer","score","filter","answers","console","log","skipQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","div","className","initial","opacity","y","animate","transition","duration","onClick","mode","x","exit","onAnswerSelect","delay","options","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Quiz App/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ArrowLeft, Clock, CheckCircle, XCircle } from 'lucide-react';\r\nimport Question from './Question';\r\nimport ProgressBar from './ProgressBar';\r\nimport Timer from './Timer';\r\nimport './Quiz.css';\r\n\r\nconst Quiz = ({ questions, category, onFinishQuiz, onBackToStart }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [timeSpent, setTimeSpent] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(30);\r\n  const [isQuestionTimerActive, setIsQuestionTimerActive] = useState(true);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const progress = ((currentQuestionIndex + 1) / questions.length) * 100;\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeSpent(prev => prev + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const handleAnswerSelect = (answerIndex) => {\r\n    if (isAnswered) return;\r\n    \r\n    setSelectedAnswer(answerIndex);\r\n    setIsAnswered(true);\r\n    setShowFeedback(true);\r\n\r\n    const isCorrect = answerIndex === currentQuestion.correctAnswer;\r\n    const newAnswer = {\r\n      questionIndex: currentQuestionIndex,\r\n      selectedAnswer: answerIndex,\r\n      correctAnswer: currentQuestion.correctAnswer,\r\n      isCorrect,\r\n      timeSpent: timeSpent\r\n    };\r\n\r\n    // Update userAnswers and handle the last question properly\r\n    setUserAnswers(prev => {\r\n      const updatedAnswers = [...prev, newAnswer];\r\n      \r\n      // If this is the last question, finish the quiz after state update\r\n      if (currentQuestionIndex === questions.length - 1) {\r\n        setTimeout(() => {\r\n          finishQuizWithAnswers(updatedAnswers);\r\n        }, 2000);\r\n      }\r\n      \r\n      return updatedAnswers;\r\n    });\r\n\r\n    // Auto-advance after showing feedback (only for non-last questions)\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setTimeout(() => {\r\n        nextQuestion();\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setShowFeedback(false);\r\n    setSelectedAnswer(null);\r\n    setIsAnswered(false);\r\n\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      // Don't reset state before finishing quiz\r\n      finishQuiz();\r\n    }\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    // Ensure all questions have answers (fill in any missing ones)\r\n    const completeAnswers = questions.map((question, index) => {\r\n      const existingAnswer = userAnswers.find(answer => answer.questionIndex === index);\r\n      if (existingAnswer) {\r\n        return existingAnswer;\r\n      } else {\r\n        // Create a default answer for any missing questions\r\n        return {\r\n          questionIndex: index,\r\n          selectedAnswer: null,\r\n          correctAnswer: question.correctAnswer,\r\n          isCorrect: false,\r\n          timeSpent: timeSpent\r\n        };\r\n      }\r\n    });\r\n    \r\n    const score = completeAnswers.filter(answer => answer.isCorrect).length;\r\n    onFinishQuiz(completeAnswers, score, timeSpent);\r\n  };\r\n\r\n  const finishQuizWithAnswers = (answers) => {\r\n    console.log('Finishing quiz with answers:', answers);\r\n    \r\n    // Ensure all questions have answers (fill in any missing ones)\r\n    const completeAnswers = questions.map((question, index) => {\r\n      const existingAnswer = answers.find(answer => answer.questionIndex === index);\r\n      if (existingAnswer) {\r\n        console.log(`Question ${index}: Found answer`, existingAnswer);\r\n        return existingAnswer;\r\n      } else {\r\n        console.log(`Question ${index}: No answer found, creating default`);\r\n        // Create a default answer for any missing questions\r\n        return {\r\n          questionIndex: index,\r\n          selectedAnswer: null,\r\n          correctAnswer: question.correctAnswer,\r\n          isCorrect: false,\r\n          timeSpent: timeSpent\r\n        };\r\n      }\r\n    });\r\n    \r\n    console.log('Complete answers:', completeAnswers);\r\n    const score = completeAnswers.filter(answer => answer.isCorrect).length;\r\n    onFinishQuiz(completeAnswers, score, timeSpent);\r\n  };\r\n\r\n  const skipQuestion = () => {\r\n    const newAnswer = {\r\n      questionIndex: currentQuestionIndex,\r\n      selectedAnswer: null,\r\n      correctAnswer: currentQuestion.correctAnswer,\r\n      isCorrect: false,\r\n      timeSpent: timeSpent\r\n    };\r\n\r\n    setUserAnswers(prev => {\r\n      const updatedAnswers = [...prev, newAnswer];\r\n      \r\n      // If this is the last question, finish the quiz after state update\r\n      if (currentQuestionIndex === questions.length - 1) {\r\n        setTimeout(() => {\r\n          finishQuizWithAnswers(updatedAnswers);\r\n        }, 100);\r\n      }\r\n      \r\n      return updatedAnswers;\r\n    });\r\n    \r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      nextQuestion();\r\n    }\r\n  };\r\n\r\n  if (!currentQuestion) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"quiz-container\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"quiz-header\">\r\n        <button className=\"back-button\" onClick={onBackToStart}>\r\n          <ArrowLeft className=\"back-icon\" />\r\n          Back to Categories\r\n        </button>\r\n        \r\n        <div className=\"quiz-info\">\r\n          <h2 className=\"category-title\">{category}</h2>\r\n          <div className=\"quiz-stats\">\r\n            <span className=\"question-counter\">\r\n              Question {currentQuestionIndex + 1} of {questions.length}\r\n            </span>\r\n            <Timer timeSpent={timeSpent} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ProgressBar progress={progress} />\r\n\r\n      <AnimatePresence mode=\"wait\">\r\n        <motion.div\r\n          key={currentQuestionIndex}\r\n          initial={{ opacity: 0, x: 50 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: -50 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"question-container\"\r\n        >\r\n          <Question\r\n            question={currentQuestion}\r\n            onAnswerSelect={handleAnswerSelect}\r\n            selectedAnswer={selectedAnswer}\r\n            showFeedback={showFeedback}\r\n            isAnswered={isAnswered}\r\n          />\r\n        </motion.div>\r\n      </AnimatePresence>\r\n\r\n      {showFeedback && (\r\n        <motion.div\r\n          className=\"feedback\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n          {selectedAnswer === currentQuestion.correctAnswer ? (\r\n            <div className=\"feedback-correct\">\r\n              <CheckCircle className=\"feedback-icon\" />\r\n              <span>Correct! Well done!</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"feedback-incorrect\">\r\n              <XCircle className=\"feedback-icon\" />\r\n              <span>\r\n                Incorrect. The correct answer is: {currentQuestion.options[currentQuestion.correctAnswer]}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      )}\r\n\r\n      <div className=\"quiz-controls\">\r\n        {!isAnswered && (\r\n          <button className=\"skip-button\" onClick={skipQuestion}>\r\n            Skip Question\r\n          </button>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}