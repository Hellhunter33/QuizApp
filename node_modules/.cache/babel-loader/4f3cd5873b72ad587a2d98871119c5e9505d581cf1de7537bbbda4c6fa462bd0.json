{"ast":null,"code":"// High Scores Management\nconst HIGH_SCORES_KEY = 'quizAppHighScores';\nexport const getHighScores = () => {\n  try {\n    const scores = localStorage.getItem(HIGH_SCORES_KEY);\n    return scores ? JSON.parse(scores) : [];\n  } catch (error) {\n    console.error('Error loading high scores:', error);\n    return [];\n  }\n};\nexport const saveHighScore = scoreData => {\n  try {\n    const scores = getHighScores();\n    const newScore = {\n      id: Date.now(),\n      date: new Date().toISOString(),\n      ...scoreData\n    };\n    scores.push(newScore);\n\n    // Sort by score (descending) and keep only top 10\n    scores.sort((a, b) => b.score - a.score);\n    const topScores = scores.slice(0, 10);\n    localStorage.setItem(HIGH_SCORES_KEY, JSON.stringify(topScores));\n    return topScores;\n  } catch (error) {\n    console.error('Error saving high score:', error);\n    return [];\n  }\n};\nexport const isHighScore = (score, category, difficulty) => {\n  const scores = getHighScores();\n  const categoryScores = scores.filter(s => s.category === category && s.difficulty === difficulty);\n\n  // If less than 10 scores for this category/difficulty, it's a high score\n  if (categoryScores.length < 10) return true;\n\n  // Check if score is higher than the lowest score\n  const lowestScore = Math.min(...categoryScores.map(s => s.score));\n  return score > lowestScore;\n};\nexport const getCategoryHighScores = (category, difficulty) => {\n  const scores = getHighScores();\n  return scores.filter(s => s.category === category && s.difficulty === difficulty).sort((a, b) => b.score - a.score).slice(0, 5);\n};","map":{"version":3,"names":["HIGH_SCORES_KEY","getHighScores","scores","localStorage","getItem","JSON","parse","error","console","saveHighScore","scoreData","newScore","id","Date","now","date","toISOString","push","sort","a","b","score","topScores","slice","setItem","stringify","isHighScore","category","difficulty","categoryScores","filter","s","length","lowestScore","Math","min","map","getCategoryHighScores"],"sources":["C:/Users/HP/OneDrive/Desktop/Quiz App/src/utils/highScores.js"],"sourcesContent":["// High Scores Management\r\nconst HIGH_SCORES_KEY = 'quizAppHighScores';\r\n\r\nexport const getHighScores = () => {\r\n  try {\r\n    const scores = localStorage.getItem(HIGH_SCORES_KEY);\r\n    return scores ? JSON.parse(scores) : [];\r\n  } catch (error) {\r\n    console.error('Error loading high scores:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const saveHighScore = (scoreData) => {\r\n  try {\r\n    const scores = getHighScores();\r\n    const newScore = {\r\n      id: Date.now(),\r\n      date: new Date().toISOString(),\r\n      ...scoreData\r\n    };\r\n    \r\n    scores.push(newScore);\r\n    \r\n    // Sort by score (descending) and keep only top 10\r\n    scores.sort((a, b) => b.score - a.score);\r\n    const topScores = scores.slice(0, 10);\r\n    \r\n    localStorage.setItem(HIGH_SCORES_KEY, JSON.stringify(topScores));\r\n    return topScores;\r\n  } catch (error) {\r\n    console.error('Error saving high score:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const isHighScore = (score, category, difficulty) => {\r\n  const scores = getHighScores();\r\n  const categoryScores = scores.filter(s => s.category === category && s.difficulty === difficulty);\r\n  \r\n  // If less than 10 scores for this category/difficulty, it's a high score\r\n  if (categoryScores.length < 10) return true;\r\n  \r\n  // Check if score is higher than the lowest score\r\n  const lowestScore = Math.min(...categoryScores.map(s => s.score));\r\n  return score > lowestScore;\r\n};\r\n\r\nexport const getCategoryHighScores = (category, difficulty) => {\r\n  const scores = getHighScores();\r\n  return scores\r\n    .filter(s => s.category === category && s.difficulty === difficulty)\r\n    .sort((a, b) => b.score - a.score)\r\n    .slice(0, 5);\r\n};\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAG,mBAAmB;AAE3C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI;IACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAACJ,eAAe,CAAC;IACpD,OAAOE,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;EACzC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAIC,SAAS,IAAK;EAC1C,IAAI;IACF,MAAMR,MAAM,GAAGD,aAAa,CAAC,CAAC;IAC9B,MAAMU,QAAQ,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;MAC9B,GAAGN;IACL,CAAC;IAEDR,MAAM,CAACe,IAAI,CAACN,QAAQ,CAAC;;IAErB;IACAT,MAAM,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;IACxC,MAAMC,SAAS,GAAGpB,MAAM,CAACqB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAErCpB,YAAY,CAACqB,OAAO,CAACxB,eAAe,EAAEK,IAAI,CAACoB,SAAS,CAACH,SAAS,CAAC,CAAC;IAChE,OAAOA,SAAS;EAClB,CAAC,CAAC,OAAOf,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMmB,WAAW,GAAGA,CAACL,KAAK,EAAEM,QAAQ,EAAEC,UAAU,KAAK;EAC1D,MAAM1B,MAAM,GAAGD,aAAa,CAAC,CAAC;EAC9B,MAAM4B,cAAc,GAAG3B,MAAM,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,IAAII,CAAC,CAACH,UAAU,KAAKA,UAAU,CAAC;;EAEjG;EACA,IAAIC,cAAc,CAACG,MAAM,GAAG,EAAE,EAAE,OAAO,IAAI;;EAE3C;EACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,cAAc,CAACO,GAAG,CAACL,CAAC,IAAIA,CAAC,CAACV,KAAK,CAAC,CAAC;EACjE,OAAOA,KAAK,GAAGY,WAAW;AAC5B,CAAC;AAED,OAAO,MAAMI,qBAAqB,GAAGA,CAACV,QAAQ,EAAEC,UAAU,KAAK;EAC7D,MAAM1B,MAAM,GAAGD,aAAa,CAAC,CAAC;EAC9B,OAAOC,MAAM,CACV4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,IAAII,CAAC,CAACH,UAAU,KAAKA,UAAU,CAAC,CACnEV,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CACjCE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}